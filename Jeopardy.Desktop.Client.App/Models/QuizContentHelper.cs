using Jeopardy.Core.Data.Quiz;
using Jeopardy.Core.Data.Quiz.Constants;
using System;
using System.IO;

namespace Jeopardy.Desktop.Client.App.Models
{
    public class QuizContentHelper
    {
        public static readonly string TempPath = Path.Combine(Directory.GetCurrentDirectory(), "Temp");
        public readonly string AutogeneratedPath = Path.Combine(TempPath, DateTime.Now.ToString("HHmmss"));

        public void SaveToTempLocation(Quiz quiz)
        {
            _ = Directory.CreateDirectory(AutogeneratedPath);

            for (var i = 0; i < quiz.Rounds.Count; i++)
            {
                QuizRound? round = quiz.Rounds[i];
                for (var j = 0; j < round.Categories.Count; j++)
                {
                    QuizCategory? category = round.Categories[j];
                    for (var k = 0; k < category.Questions.Count; k++)
                    {
                        Question? question = category.Questions[k];
                        if (question.ContentAccessType == ContentAccessType.Embedded && (question.ContentType is ContentType.Video || question.ContentType is ContentType.Sound))
                        {
                            var fileExtension = Path.GetExtension(question.ContentPath);
                            var filename = Path.Combine(AutogeneratedPath, $"{i}{j}{k}{fileExtension}");
                            question.ContentPath = filename;
                            File.WriteAllBytes(filename, question.RawContent);
                            question.RawContent = Array.Empty<byte>();
                        }
                    }
                }
            }
        }

        //Change to Temp path before dist
        public void Cleanup() => Directory.Delete(AutogeneratedPath, true);
    }
}
